{"mappings":"ACEA,SAAS,gBAAgB,CAAC,QAAS,AAAA,IACjC,IAAM,EAAS,SAAS,aAAa,CAAC,WAEhC,EAAO,SAAS,aAAa,CAAC,SAE9B,EAAQ,iBAAiB,GAEzB,EAAc,WAAW,EAAM,MAAM,EAErC,EAAY,EAAK,qBAAqB,GAAG,IAAI,CAAG,EAEhD,EAAW,EAAK,qBAAqB,GAAG,GAAG,CAAG,EAE9C,EAAc,EAAO,WAAW,CAEhC,EAAe,EAAO,YAAY,CAExC,GAAI,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,SAI7B,EAAE,OAAO,CAAG,GAAa,EAAE,OAAO,CAAG,GAIrC,EAAE,OAAO,CAAG,EAAY,EAAK,WAAW,EACvC,EAAE,OAAO,CAAG,EAAW,EAAK,YAAY,CAR3C,MAAO,CAAA,CAYL,CAAA,EAAE,OAAO,CAAG,EAAY,EAAc,GACxC,CAAA,EAAO,KAAK,CAAC,IAAI,CAAG,KAAI,EAGtB,EAAE,OAAO,CAAG,EAAW,EAAe,GACxC,CAAA,EAAO,KAAK,CAAC,GAAG,CAAG,KAAI,EAGrB,EAAE,OAAO,CAAG,EAAY,EAAK,WAAW,CAAG,EAAc,GAC3D,CAAA,EAAO,KAAK,CAAC,IAAI,CAAG,CAAC,EAAE,EAAK,WAAW,CAAG,EAAY,EAAE,CAAC,AAAD,EAGtD,EAAE,OAAO,CAAG,EAAW,EAAK,YAAY,CAAG,EAAe,GAC5D,CAAA,EAAO,KAAK,CAAC,GAAG,CAAG,CAAC,EAAE,EAAK,YAAY,CAAG,EAAa,EAAE,CAAC,AAAD,EAGvD,EAAE,OAAO,CAAG,EAAY,EAAc,GACrC,EAAE,OAAO,CAAG,EAAY,EAAK,WAAW,CAAG,EAAc,GAC5D,CAAA,EAAO,KAAK,CAAC,IAAI,CAAG,CAAC,EAAE,EAAE,OAAO,CAAG,EAAY,EAAc,EAAE,EAAE,CAAC,AAAD,EAG/D,EAAE,OAAO,CAAG,EAAW,EAAe,GACrC,EAAE,OAAO,CAAG,EAAW,EAAK,YAAY,CAAG,EAAe,GAC7D,CAAA,EAAO,KAAK,CAAC,GAAG,CAAG,CAAC,EAAE,EAAE,OAAO,CAAG,EAAW,EAAe,EAAE,EAAE,CAAC,AAAD,CAEpE,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"click\", (e)=>{\n    const spider = document.querySelector(\".spider\");\n    const wall = document.querySelector(\".wall\");\n    const style = getComputedStyle(wall);\n    const borderWidth = parseFloat(style.border);\n    const shiftLeft = wall.getBoundingClientRect().left + borderWidth;\n    const shiftTop = wall.getBoundingClientRect().top + borderWidth;\n    const spiderWidth = spider.clientWidth;\n    const spiderHeight = spider.clientHeight;\n    if (!e.target.classList.contains(\"wall\")) return false;\n    if (e.clientX < shiftLeft || e.clientY < shiftTop) return false;\n    if (e.clientX > shiftLeft + wall.clientWidth || e.clientY > shiftTop + wall.clientHeight) return false;\n    if (e.clientX < shiftLeft + spiderWidth / 2) spider.style.left = `0px`;\n    if (e.clientY < shiftTop + spiderHeight / 2) spider.style.top = `0px`;\n    if (e.clientX > shiftLeft + wall.clientWidth - spiderWidth / 2) spider.style.left = `${wall.clientWidth - spiderWidth}px`;\n    if (e.clientY > shiftTop + wall.clientHeight - spiderHeight / 2) spider.style.top = `${wall.clientHeight - spiderHeight}px`;\n    if (e.clientX > shiftLeft + spiderWidth / 2 && e.clientX < shiftLeft + wall.clientWidth - spiderWidth / 2) spider.style.left = `${e.clientX - shiftLeft - spiderWidth / 2}px`;\n    if (e.clientY > shiftTop + spiderHeight / 2 && e.clientY < shiftTop + wall.clientHeight - spiderHeight / 2) spider.style.top = `${e.clientY - shiftTop - spiderHeight / 2}px`;\n});\n\n//# sourceMappingURL=index.39786ecf.js.map\n","'use strict';\n\ndocument.addEventListener('click', e => {\n  const spider = document.querySelector('.spider');\n\n  const wall = document.querySelector('.wall');\n\n  const style = getComputedStyle(wall);\n\n  const borderWidth = parseFloat(style.border);\n\n  const shiftLeft = wall.getBoundingClientRect().left + borderWidth;\n\n  const shiftTop = wall.getBoundingClientRect().top + borderWidth;\n\n  const spiderWidth = spider.clientWidth;\n\n  const spiderHeight = spider.clientHeight;\n\n  if (!e.target.classList.contains('wall')) {\n    return false;\n  }\n\n  if (e.clientX < shiftLeft || e.clientY < shiftTop) {\n    return false;\n  }\n\n  if (e.clientX > shiftLeft + wall.clientWidth\n    || e.clientY > shiftTop + wall.clientHeight) {\n    return false;\n  }\n\n  if (e.clientX < shiftLeft + spiderWidth / 2) {\n    spider.style.left = `0px`;\n  }\n\n  if (e.clientY < shiftTop + spiderHeight / 2) {\n    spider.style.top = `0px`;\n  }\n\n  if (e.clientX > shiftLeft + wall.clientWidth - spiderWidth / 2) {\n    spider.style.left = `${wall.clientWidth - spiderWidth}px`;\n  }\n\n  if (e.clientY > shiftTop + wall.clientHeight - spiderHeight / 2) {\n    spider.style.top = `${wall.clientHeight - spiderHeight}px`;\n  }\n\n  if (e.clientX > shiftLeft + spiderWidth / 2\n    && e.clientX < shiftLeft + wall.clientWidth - spiderWidth / 2) {\n    spider.style.left = `${e.clientX - shiftLeft - spiderWidth / 2}px`;\n  }\n\n  if (e.clientY > shiftTop + spiderHeight / 2\n    && e.clientY < shiftTop + wall.clientHeight - spiderHeight / 2) {\n    spider.style.top = `${e.clientY - shiftTop - spiderHeight / 2}px`;\n  }\n});\n"],"names":["document","addEventListener","e","spider","querySelector","wall","style","getComputedStyle","borderWidth","parseFloat","border","shiftLeft","getBoundingClientRect","left","shiftTop","top","spiderWidth","clientWidth","spiderHeight","clientHeight","target","classList","contains","clientX","clientY"],"version":3,"file":"index.39786ecf.js.map"}